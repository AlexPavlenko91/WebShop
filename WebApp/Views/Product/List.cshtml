@using Repositories
@inject ICategoryRepository _categories;
@model IEnumerable<BL.ProductViewModel>

@{
    ViewData["Title"] = "ListAdmin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ul>

    @foreach (var category in _categories.AllItems)
    {
        <li>
            <a href="~/Product/ListWithCat/@category.Id">@category.Name</a>
        </li>
    }
</ul>
@{string catName = null; }
<section>
    @foreach (var item in Model.OrderBy(p => p.CategoryName))
    {
        
        @if (catName != item.CategoryName)
        {
            catName = item.CategoryName;
            <h2>@catName</h2>
        }

        <div class="product-container">
            <a class="prod" href="@Url.Action("Details", new { id = item.Id })">
                @Html.DisplayFor(modelItem => item.Name)
            </a>
            <img class="d-block w-100" src="~/api/Asset/@item.Images[0]" alt="Alternate Text" />
            <div>
                <span>@Html.DisplayFor(modelItem => item.Price)</span>
                @Html.ActionLink("Details", "Details", new { id = item.Id })
                <img class="basket" src="~/images/Basket1.png" alt="Alternate Text" />
            </div>
        </div>

    }
    <hr />
</section>