@using Repositories
@inject ICategoryRepository _categories;
@model IEnumerable<BL.ProductViewModel>

@{
    ViewData["Title"] = "ListAdmin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <aside class="col">
        <ul>
            @foreach (var category in _categories.AllItems)
            {
                <li>
                    <a href="~/Product/ListWithCat/@category.Id">@category.Name</a>
                </li>
            }
        </ul>
    </aside>
    <section class="col d-flex">
    @{ string catName = null; }
        @foreach (var item in Model.OrderBy(p => p.CategoryName))
        {
            <div class="row">
                @if (catName != item.CategoryName)
                {
                    catName = item.CategoryName;
                    <h2>@catName</h2>
                }
        </div>
                <div class="row">
                <div class="product-container">
                    <a class="prod" href="@Url.Action("Details", new {id = item.Id})">
                        @Html.DisplayFor(modelItem => item.Name)
                    </a>
                    <div class="product-img">
                        <img class="w-auto img-fluid figure-img card-img" src="~/api/Asset/@item.Images[0]" alt="Alternate Text"/>
                    </div>
                    <div>
                        <span>@Html.DisplayFor(modelItem => item.Price)</span>
                        @Html.ActionLink("Details", "Details", new {id = item.Id})
                        <img class="basket" src="~/images/Basket1.png" alt="Alternate Text"/>
                    </div>
                </div>
            </div>
        }
        <hr/>
    </section>
</div>